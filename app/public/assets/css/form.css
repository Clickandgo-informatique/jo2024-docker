:root {
    --form-bg: #ffffff;
    --form-border: #d6d8db;
    --form-accent: #2563eb; /* bleu */
    --form-error: #dc2626; /* rouge */
    --form-muted: #6b7280; /* gris */
    --form-radius: 8px;
    --form-padding: 0.75rem;
    --transition-fast: 0.18s ease;
}
form {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 25px;
    margin: 10px;
    width: 100%;
    max-width: 500px;
    & .btn {
        margin: 10px auto;
    }
}
.form-row {
    display: flex;
    flex-direction: column;
    gap: 0.375rem;
    margin-bottom: 1rem;
    position: relative;
}

/* Label classique (fallback) */
.form-row > label,
.form-label {
    font-size: 0.875rem;
    color: var(--form-muted);
    font-weight: 600;
    margin-bottom: 5px;
}

/* Input / textarea / select styles */
.form-control,
input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
input[type="url"],
input[type="tel"],
input[type="number"],
textarea,
select {
    appearance: none;
    background: var(--form-bg);
    border: 1px solid var(--form-border);
    border-radius: var(--form-radius);
    padding: var(--form-padding);
    font-size: 1rem;
    line-height: 1.4;
    transition: border-color var(--transition-fast),
        box-shadow var(--transition-fast), transform var(--transition-fast);
    box-shadow: none;
    width: 100%;
    box-sizing: border-box;
    margin-bottom: 10px;
}

/* Focus accessible */
.form-control:focus {
    outline: none;
    border-color: var(--form-accent);
    box-shadow: 0 0 0 4px rgba(37, 99, 235, 0.08);
}

/* Disabled or read-only */
.form-control[disabled],
.form-control[readonly] {
    opacity: 0.6;
    cursor: not-allowed;
}

/* Help text (Symfony often renders with class form-help or form-text) */
.form-help,
.form-text {
    font-size: 0.8125rem;
    color: var(--form-muted);
}

/* Error messages */
.form-errors,
.form-error {
    color: var(--form-error);
    font-size: 0.875rem;
    margin-top: 0.25rem;
    font-weight: 600;
}

/* Required marker (Symfony typically adds required attribute on fields) */
.form-row > label.required::after,
.form-label.required::after {
    content: " *";
    color: var(--form-error);
    margin-left: 0.125rem;
    font-weight: 700;
}

.btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
}

/* Floating / dynamic label wrapper */
.form-floating {
    position: relative;
    margin-bottom: 1.25rem;
}

/* The input must have a placeholder (even empty) for :placeholder-shown to work in some browsers.
   Alternatively, use JS to toggle .has-value on the input or on the wrapper when it contains text.
*/
.form-floating .form-control {
    padding: 1.125rem 0.75rem 0.375rem 0.75rem; /* top space for floating label */
}

.form-floating label {
    position: absolute;
    left: 0.75rem;
    top: 1rem;
    transform-origin: left top;
    font-size: 1rem;
    color: var(--form-muted);
    pointer-events: none;
    transition: transform var(--transition-fast), top var(--transition-fast),
        font-size var(--transition-fast), color var(--transition-fast);
    background: transparent;
    padding: 0 0.125rem;
}

/* State: input focused OR has content -> shrink and move label */
/* Method A: using :placeholder-shown (works if input has placeholder or browser supports empty placeholder detection) */
.form-floating .form-control:focus + label,
.form-floating .form-control:not(:placeholder-shown) + label {
    top: 0.375rem;
    transform: scale(0.82);
    font-size: 0.78rem;
    color: var(--form-accent);
}

/* Method B: when JS toggles .has-value on the input */
.form-floating .form-control.has-value + label {
    top: 0.375rem;
    transform: scale(0.82);
    font-size: 0.78rem;
    color: var(--form-accent);
}

/* If you prefer to put the label before the input in DOM order, adjust selector:
   label.floating + input.form-control:focus { ... }
*/

/* Small inputs / inline fields */
.form-inline {
    display: flex;
    gap: 0.5rem;
    align-items: center;
    flex-wrap: wrap;
}

/* Fieldset / grouping */
.fieldset {
    border: 1px solid var(--form-border);
    padding: 0.75rem;
    border-radius: 10px;
    margin-bottom: 1rem;
}

/* Accessibility helpers */
.sr-only {
    position: absolute !important;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}
.search-form {
    display: flex;
    width: 100%;
}
.search-container {
  display: flex;
  width: 100%;
  max-width: 400px;
  border-radius: 30px;
  overflow: hidden;
  box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  border: 1px solid #ccc;
  height: 45px; /* hauteur fixe pour un alignement parfait */
}

.search-container .search-input {
  flex: 1;
  padding: 0 15px; /* padding vertical nul pour centrer le texte */
  border: none;
  font-size: 16px;
  outline: none;
  height: 100%; /* prend toute la hauteur du container */
  box-sizing: border-box;
}

.search-container .search-button {
  background: #007BFF;
  color: white;
  border: none;
  padding: 0 20px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background 0.3s ease;
  font-size: 18px;
  height: 100%; /* prend toute la hauteur du container */
}

.search-container .search-button:hover {
  background: #0056b3;
}

/* Responsive */
@media (max-width: 480px) {
  .search-container .search-container {
    max-width: 100%;
    height: 40px;
  }
  .search-container .search-input {
    font-size: 14px;
  }
  .search-container .search-button {
    font-size: 16px;
    padding: 0 15px;
  }
}


/* Responsive tweaks */
@media (min-width: 768px) {
    .form-row.horizontal {
        display: grid;
        grid-template-columns: 200px 1fr;
        gap: 1rem;
        align-items: center;
    }
    .form-row.horizontal label {
        margin: 0;
        text-align: right;
        padding-right: 0.5rem;
    }
}

/* Tiny utility classes */
.mb-0 {
    margin-bottom: 0 !important;
}
.mb-1 {
    margin-bottom: 0.25rem !important;
}
.mt-1 {
    margin-top: 0.25rem !important;
}

/* Example: styling Symfony's default error wrapper (ul.form-errors li) */
ul.form-errors {
    margin: 0.25rem 0 0 0;
    padding-left: 1.15rem;
    color: var(--form-error);
}

/* End of form.css */
